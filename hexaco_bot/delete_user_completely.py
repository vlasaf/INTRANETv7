import sqlite3
import sys
import os
from pathlib import Path

def delete_user_completely(user_id):
    """
    –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—Ç—á–µ—Ç–æ–≤ –∏ –ø—Ä–æ—Ñ–∏–ª–µ–π
    
    Args:
        user_id (int): ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
    """
    db_path = "data/hexaco_bot.db"
    
    # –¢–∞–±–ª–∏—Ü—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ (–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ë–î)
    tables_to_clean = [
        "users",
        "test_sessions", 
        "results"
    ]
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        cursor.execute("SELECT username, first_name, last_name FROM users WHERE user_id = ?", (user_id,))
        user_info = cursor.fetchone()
        
        if not user_info:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        username, first_name, last_name = user_info
        print(f"üîç –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username} ({first_name} {last_name})")
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
        confirm = input(f"‚ö†Ô∏è  –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ü–û–õ–ù–û–°–¢–¨–Æ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}? (yes/no): ")
        if confirm.lower() != 'yes':
            print("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
            return
        
        # –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
        total_deleted = 0
        for table in tables_to_clean:
            cursor.execute(f"SELECT COUNT(*) FROM {table} WHERE user_id = ?", (user_id,))
            count = cursor.fetchone()[0]
            
            if count > 0:
                cursor.execute(f"DELETE FROM {table} WHERE user_id = ?", (user_id,))
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {count} –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã {table}")
                total_deleted += count
        
        conn.commit()
        
        # –£–¥–∞–ª–µ–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        delete_user_files(user_id, username)
        
        print(f"üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω! –í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {total_deleted}")
        print("üìù –¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–Ω–µ—Ç —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞ –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º /start")
        
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    finally:
        conn.close()

def delete_user_files(user_id, username):
    """–£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª—ã –æ—Ç—á–µ—Ç–æ–≤ –∏ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –æ—Ç—á–µ—Ç–æ–≤
    reports_dir = Path("user_reports")
    if reports_dir.exists():
        # –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –æ—Ç—á–µ—Ç–æ–≤ –ø–æ username
        if username:
            safe_username = "".join(c if c.isalnum() else "_" for c in str(username))
            for report_file in reports_dir.glob(f"report_{safe_username}_*.json"):
                try:
                    report_file.unlink()
                    print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª –æ—Ç—á–µ—Ç–∞: {report_file}")
                except Exception as e:
                    print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –æ—Ç—á–µ—Ç–∞ {report_file}: {e}")
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ—Ñ–∏–ª–µ–π
    profiles_dir = Path("user_profile")
    if profiles_dir.exists():
        profile_file = profiles_dir / f"{user_id}_profile.json"
        if profile_file.exists():
            try:
                profile_file.unlink()
                print(f"üóëÔ∏è  –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª –ø—Ä–æ—Ñ–∏–ª—è: {profile_file}")
            except Exception as e:
                print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –ø—Ä–æ—Ñ–∏–ª—è {profile_file}: {e}")

def main():
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python delete_user_completely.py <user_id>")
        print("–ü—Ä–∏–º–µ—Ä: python delete_user_completely.py 456355303")
        sys.exit(1)
    
    try:
        user_id = int(sys.argv[1])
    except ValueError:
        print("‚ùå user_id –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
        sys.exit(1)
    
    delete_user_completely(user_id)

if __name__ == "__main__":
    main()